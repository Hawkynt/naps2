#region (c)2010-2020 Hawkynt
/*
  This file is part of Hawkynt's .NET Framework extensions.

    Hawkynt's .NET Framework extensions are free software: 
    you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Hawkynt's .NET Framework extensions is distributed in the hope that 
    it will be useful, but WITHOUT ANY WARRANTY; without even the implied 
    warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
    the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Hawkynt's .NET Framework extensions.  
    If not, see <http://www.gnu.org/licenses/>.
*/
#endregion

/* ATTENTION: This file is generated by a tool. All changes will be reverted upon next run ! */
#if NETFX_4
using System.Diagnostics.Contracts;
#endif

// ReSharper disable PartialTypeWithSinglePart

namespace System.Drawing {
  internal static partial class ImageExtensions {

    /// <summary>
    /// Rotates the specified image.
    /// </summary>
    /// <param name="This">This Image.</param>
    /// <param name="angle">The angle.</param>
    /// <returns></returns>
    public static Bitmap Rotate(this Image This, float angle) {
#if NETFX_4
      Contract.Requires(This != null);
#endif
      var result = new Bitmap(This);

      while (angle < 0)
        angle += 360;

      if (angle >= 360)
        angle = angle % 360;

      if (angle == 0)
        return (result);

      if (angle == 90) {
        result.RotateFlip(RotateFlipType.Rotate90FlipNone);
        return (result);
      }

      if (angle == 180) {
        result.RotateFlip(RotateFlipType.Rotate180FlipNone);
        return (result);
      }

      if (angle == 270) {
        result.RotateFlip(RotateFlipType.Rotate270FlipNone);
        return (result);
      }

      using (var graphics = Graphics.FromImage(result)) {
        graphics.TranslateTransform(result.Width / 2f, result.Height / 2f);
        graphics.RotateTransform(angle);
        graphics.TranslateTransform(-result.Width / 2f, -result.Height / 2f);
        graphics.DrawImage(result, new Point(0, 0));
      }
      return (result);
    }

  }
}


